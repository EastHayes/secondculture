<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hugo on The Second Culture Kid</title>
    <link>https://secondculturekid.com/tags/hugo/</link>
    <description>Recent content in Hugo on The Second Culture Kid</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>jp</language>
    <lastBuildDate>Sun, 26 Mar 2017 00:46:34 -0700</lastBuildDate>
    
	<atom:link href="https://secondculturekid.com/tags/hugo/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Hugoブログ</title>
      <link>https://secondculturekid.com/post/hosting-hugo-on-ghp/</link>
      <pubDate>Sun, 26 Mar 2017 00:46:34 -0700</pubDate>
      
      <guid>https://secondculturekid.com/post/hosting-hugo-on-ghp/</guid>
      <description>Hugo &amp;amp; GitHub Pages せっかくHugoでブログを書いているので、HugoのインストールからGitHub Pagesにデプロイするまでの方法を紹介します。 公式チュートリアルは全部英語なので、これからHugoを使おうと思っている人の参考になれば。自分用にもメモ。

Hugoとは 一般的にウェブサイトは、ユーザーがページを訪問する度にウェブサーバが動的にHTMLファイルを生成する仕組みになっています。Hugoは、Markdownで書かれたコンテンツをHTMLとしてレンダリングし、ウェブサイトを事前に生成する静的サイトジェネレータです。ウェブサーバが動的にページをビルドする必要がないため、ページが表示されるまでの時間が短縮されます。静的サイトジェネレータはGo言語で書かれたHugoの他にも、Rubyで書かれたJekyllやOctopressなどがあります。
ローカルでセットアップ ①〜④でHugoのインストールからテーマの適用までをカバーします。
＊このステップが既に完了している方はこちらへ → HugoをGitHub Pagesにデプロイする
① Hugoをインストール
ここから最新verをダウンロードするか、Homebrewを使って$ brew install hugoでインストールしてください。
② 新しいプロジェクトを作成
$ cdでホームディレクトリに移動して、$ hugo new site &amp;lt;project&amp;gt; で新しいプロジェクトを作ります。 &amp;lt;project&amp;gt;にはプロジェクト名を入れてください。
③ テーマを選択
Hugo Themesレポジトリから、テーマを選んでthemeディレクトリにクローンしてください。 &amp;lt;theme_URL&amp;gt;はテーマリポジトリのURLと置き換えてください。
$ cd themes $ git clone &amp;lt;theme_URL&amp;gt;　 ④ ローカルでプレビュー
$ hugo server -t &amp;lt;theme&amp;gt; でHugoをローカルで立ち上げて、http://localhost:1313/ でサイトが正しく表示されていることを確認してください。 問題がなければCtrl+Cでサーバを止めてください。
記事の追加は$ hugo new post/new-post.mdで簡単にできます。 

HugoをGitHub Pagesにデプロイする ここからはプロジェクトをGithub Pagesにホスティングをする方法を説明します。
まず、GitHubに2つのリポジトリを用意します。
 &amp;lt;username&amp;gt;.github.ioリポジトリ (必ずこの名前を使ってください)  &amp;lt;project&amp;gt;リポジトリ（プロジェクト名や好きな名前を使ってください)  &amp;lt;username&amp;gt;.</description>
    </item>
    
  </channel>
</rss>